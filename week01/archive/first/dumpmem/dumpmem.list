     1                                  %include "asm_io.inc"
     2                              <1> 	extern  read_int, print_int, print_string
     3                              <1> 	extern	read_char, print_char, print_nl
     4                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     5                              <1> 
     6                              <1> %macro 	dump_regs 1
     7                              <1> 	push	  dword %1
     8                              <1> 	call	  sub_dump_regs
     9                              <1> %endmacro
    10                              <1> 
    11                              <1> 
    12                              <1> ;
    13                              <1> ; usage: dump_mem label, start-address, # paragraphs
    14                              <1> %macro  dump_mem 3
    15                              <1> 	push	 dword %1
    16                              <1> 	push	 dword %2
    17                              <1> 	push	 dword %3
    18                              <1> 	call	 sub_dump_mem
    19                              <1> %endmacro
    20                              <1> 
    21                              <1> %macro	dump_math 1
    22                              <1> 	push	 dword %1
    23                              <1> 	call	 sub_dump_math
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  dump_stack 3
    27                              <1> 	push	 dword %3
    28                              <1>         push     dword %2
    29                              <1> 	push	 dword %1
    30                              <1>         call     sub_dump_stack
    31                              <1> %endmacro
    32                                  
    33                                  segment .data
    34                                  
    35 00000000 000102030405060708-     mesg1: db 0,1,2,3,4,5,6,7,8,9,0xA,0xB,0xC,0xD,0xE,0xF
    36 00000009 090A0B0C0D0E0F     
    37 00000010 303132333435363738-     mesg2: db "0123456789ABCDEF"
    38 00000019 39414243444546     
    39 00000020 303132333435363738-     mesg3: db "0123456789ABCDEF"
    40 00000029 39414243444546     
    41 00000030 303132333435363738-     mesg4: db "0123456789ABCDEF"
    42 00000039 39414243444546     
    43 00000040 303132333435363738-     mesg5: db "0123456789ABCDEF"
    44 00000049 39414243444546     
    45 00000050 456174206174204A6F-     EatMsg: db "Eat at Joe's!",10,0
    46 00000059 652773210A00       
    47 0000005F 546869732069732074-     outmesg1: db "This is the output",0
    48 00000068 6865206F7574707574-
    49 00000071 00                 
    50                                  
    51                                  EatLen: equ $-EatMsg
    52                                  
    53                                  segment .bss
    54                                  
    55                                  segment .text
    56                                  	global main
    57                                  
    58                                  main:
    59 00000000 90                      	nop
    60 00000001 B8[50000000]            	mov 	eax,EatMsg
    61 00000006 E8(00000000)            	call 	print_string
    62                                  	dump_regs 1
    63 0000000B 6A01                <1>  push dword %1
    64 0000000D E8(00000000)        <1>  call sub_dump_regs
    65                                  	dump_mem 2,mesg1,1
    66 00000012 6A02                <1>  push dword %1
    67 00000014 68[00000000]        <1>  push dword %2
    68 00000019 6A01                <1>  push dword %3
    69 0000001B E8(00000000)        <1>  call sub_dump_mem
    70                                  
    71 00000020 B801000000              	mov eax,1
    72 00000025 BB00000000              	mov ebx,0
    73 0000002A CD80                    	int 80H
