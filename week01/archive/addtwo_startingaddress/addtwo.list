     1                                  %include "asm_io.inc"
     2                              <1> 	extern  read_int, print_int, print_string
     3                              <1> 	extern	read_char, print_char, print_nl
     4                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     5                              <1> 
     6                              <1> %macro 	dump_regs 1
     7                              <1> 	push	  dword %1
     8                              <1> 	call	  sub_dump_regs
     9                              <1> %endmacro
    10                              <1> 
    11                              <1> 
    12                              <1> ;
    13                              <1> ; usage: dump_mem label, start-address, # paragraphs
    14                              <1> %macro  dump_mem 3
    15                              <1> 	push	 dword %1
    16                              <1> 	push	 dword %2
    17                              <1> 	push	 dword %3
    18                              <1> 	call	 sub_dump_mem
    19                              <1> %endmacro
    20                              <1> 
    21                              <1> %macro	dump_math 1
    22                              <1> 	push	 dword %1
    23                              <1> 	call	 sub_dump_math
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  dump_stack 3
    27                              <1> 	push	 dword %3
    28                              <1>         push     dword %2
    29                              <1> 	push	 dword %1
    30                              <1>         call     sub_dump_stack
    31                              <1> %endmacro
    32                                  %include "util.inc"
    33                              <1> global exit_program
    34                              <1> 
    35                              <1> exit_program:
    36 00000000 B801000000          <1>         mov eax,1
    37 00000005 BB00000000          <1>         mov ebx,0
    38 0000000A CD80                <1>         int 80H
    39                              <1> 
    40                                  
    41                                  segment .data
    42                                  
    43                                  segment .bss
    44                                  
    45                                  segment .text
    46                                  	global main
    47                                  	extern _start
    48                                  
    49                                  main:
    50 0000000C 90                      	nop
    51                                  test:
    52 0000000D B8[00000000]            	mov	eax,_start
    53                                  	dump_regs 1		; registers before
    54 00000012 6A01                <1>  push dword %1
    55 00000014 E8(00000000)        <1>  call sub_dump_regs
    56                                  test2:
    57 00000019 B80A000000                      mov     eax, 10       ; store address of input1 into ebx
    58                                  	dump_regs 2		; registers after putting 10 in eax
    59 0000001E 6A02                <1>  push dword %1
    60 00000020 E8(00000000)        <1>  call sub_dump_regs
    61 00000025 83C014                          add eax,20		; add 20 to what is currently in eax
    62                                  test3:
    63                                  	dump_regs 3		; registers after addition
    64 00000028 6A03                <1>  push dword %1
    65 0000002A E8(00000000)        <1>  call sub_dump_regs
    66 0000002F 90                      	nop
    67 00000030 E8CBFFFFFF              	call 	exit_program      ; exit the program
