     1                                  ;
     2                                  ; file: asm_main.asm
     3                                  
     4                                  %include "asm_io.inc"
     5                              <1> 	extern  read_int, print_int, print_string,print_hex
     6                              <1> 	extern	read_char, print_char, print_nl
     7                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     8                              <1> 
     9                              <1> %macro 	dump_regs 1
    10                              <1> 	push	  dword %1
    11                              <1> 	call	  sub_dump_regs
    12                              <1> %endmacro
    13                              <1> 
    14                              <1> 
    15                              <1> ;
    16                              <1> ; usage: dump_mem label, start-address, # paragraphs
    17                              <1> %macro  dump_mem 3
    18                              <1> 	push	 dword %1
    19                              <1> 	push	 dword %2
    20                              <1> 	push	 dword %3
    21                              <1> 	call	 sub_dump_mem
    22                              <1> %endmacro
    23                              <1> 
    24                              <1> %macro	dump_math 1
    25                              <1> 	push	 dword %1
    26                              <1> 	call	 sub_dump_math
    27                              <1> %endmacro
    28                              <1> 
    29                              <1> %macro  dump_stack 3
    30                              <1> 	push	 dword %3
    31                              <1>         push     dword %2
    32                              <1> 	push	 dword %1
    33                              <1>         call     sub_dump_stack
    34                              <1> %endmacro
    35                                  ;
    36                                  ; initialized data is put in the .data segment
    37                                  ;
    38                                  segment .data
    39 00000000 FFFFFFFF                num1: dd 0xFFFFFFFF
    40                                  
    41                                  ; uninitialized data is put in the .bss segment
    42                                  ;
    43                                  segment .bss
    44                                  
    45                                  ;
    46                                  ; code is put in the .text segment
    47                                  ;
    48                                  segment .text
    49                                          global  asm_main
    50                                  asm_main:
    51 00000000 C8000000                        enter   0,0               ; setup routine
    52 00000004 60                              pusha
    53                                  ; next print out result message as series of steps
    54 00000005 A1[00000000]            	mov 	eax,[num1]	
    55 0000000A E8(00000000)            	call print_hex
    56 0000000F E8(00000000)            	call print_nl
    57                                  	dump_regs 1
    58 00000014 6A01                <1>  push dword %1
    59 00000016 E8(00000000)        <1>  call sub_dump_regs
    60                                  
    61 0000001B C1E002                  	shl 	eax,2
    62 0000001E E8(00000000)            	call print_hex
    63 00000023 E8(00000000)            	call print_nl
    64                                  	dump_regs 2
    65 00000028 6A02                <1>  push dword %1
    66 0000002A E8(00000000)        <1>  call sub_dump_regs
    67                                  
    68 0000002F C1E802                  	shr 	eax,2
    69                                  	dump_regs 3
    70 00000032 6A03                <1>  push dword %1
    71 00000034 E8(00000000)        <1>  call sub_dump_regs
    72 00000039 E8(00000000)            	call print_hex
    73 0000003E E8(00000000)            	call print_nl
    74                                  
    75 00000043 61                              popa
    76 00000044 B800000000                      mov     eax, 0            ; return back to C
    77 00000049 C9                              leave                     
    78 0000004A C3                              ret
    79                                  
    80                                  
