     1                                  ;
     2                                  ; file: asm_main.asm
     3                                  ; Notes:
     4                                  ;*******************************
     5                                  ; gdb
     6                                  ;       view assembly code - layout asm
     7                                  ;       or display/i $pc
     8                                  ;*******************************
     9                                  %include "asm_io.inc"
    10                              <1> 	extern  read_int, print_int, print_string,print_hex
    11                              <1> 	extern	read_char, print_char, print_nl
    12                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
    13                              <1> 
    14                              <1> %macro 	dump_regs 1
    15                              <1> 	push	  dword %1
    16                              <1> 	call	  sub_dump_regs
    17                              <1> %endmacro
    18                              <1> 
    19                              <1> 
    20                              <1> ;
    21                              <1> ; usage: dump_mem label, start-address, # paragraphs
    22                              <1> %macro  dump_mem 3
    23                              <1> 	push	 dword %1
    24                              <1> 	push	 dword %2
    25                              <1> 	push	 dword %3
    26                              <1> 	call	 sub_dump_mem
    27                              <1> %endmacro
    28                              <1> 
    29                              <1> %macro	dump_math 1
    30                              <1> 	push	 dword %1
    31                              <1> 	call	 sub_dump_math
    32                              <1> %endmacro
    33                              <1> 
    34                              <1> %macro  dump_stack 3
    35                              <1> 	push	 dword %3
    36                              <1>         push     dword %2
    37                              <1> 	push	 dword %1
    38                              <1>         call     sub_dump_stack
    39                              <1> %endmacro
    40                                  ;
    41                                  ; initialized data is put in the .data segment
    42                                  ;
    43                                  segment .data
    44                                  ;DB, DW, DD, DQ, DT, DO, DY and DZ are used, much as in MASM, to declare initialized data in the output file. They can be invoked in a wide range of ways:
    45                                  
    46 00000000 0A000000                a      db    10,0,0,0
    47 00000004 03000000                b      db    3,0,0,0
    48 00000008 0A000000                c      db    10,0,0,0
    49 0000000C 01000000                d      db    1,0,0,0
    50                                  
    51                                  
    52                                  ; uninitialized data is put in the .bss segment
    53                                  ;
    54                                  segment .bss
    55                                  
    56                                  ;
    57                                  ; code is put in the .text segment
    58                                  ;
    59                                  segment .text
    60                                          global  asm_main
    61                                  asm_main:
    62 00000000 C8000000                        enter   0,0               ; setup routine
    63 00000004 60                              pusha
    64                                  ; calculate a = (a+b) - (c+d)
    65 00000005 A1[00000000]                    mov  eax,[a]
    66 0000000A 0305[04000000]                  add  eax,[b]
    67 00000010 8B0D[08000000]                  mov  ecx,[c]
    68 00000016 030D[0C000000]                  add  ecx,[d]
    69 0000001C 29C8                            sub  eax,ecx
    70 0000001E A3[00000000]                    mov  [a],eax
    71 00000023 E8(00000000)                    call print_int
    72 00000028 E8(00000000)                    call print_nl
    73 0000002D E8(00000000)                    call print_hex
    74 00000032 E8(00000000)                    call print_nl
    75 00000037 61                              popa
    76 00000038 B800000000                      mov     eax, 0            ; return back to C
    77 0000003D C9                              leave                     
    78 0000003E C3                              ret
    79                                  
    80                                  
